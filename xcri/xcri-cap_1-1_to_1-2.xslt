<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2011sp1

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:ns0="http://xcri.org/profiles/catalog" exclude-result-prefixes="tbf xs ns0">
	<xsl:template name="tbf:tbf1_imageDType">
		<xsl:param name="input" select="/.."/>
		<xsl:for-each select="$input/@src">
			<xsl:attribute name="src">
				<xsl:value-of select="string(.)"/>
			</xsl:attribute>
		</xsl:for-each>
		<xsl:for-each select="$input/@title">
			<xsl:attribute name="title">
				<xsl:value-of select="string(.)"/>
			</xsl:attribute>
		</xsl:for-each>
		<xsl:for-each select="$input/@alt">
			<xsl:attribute name="alt">
				<xsl:value-of select="string(.)"/>
			</xsl:attribute>
		</xsl:for-each>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<catalog xmlns="http://xcri.org/profiles/1.2/catalog" xmlns:dcmitype="http://purl.org/dc/dcmitype/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:credit="http://purl.org/net/cm" xmlns:mlo="http://purl.org/net/mlo" xmlns:xhtml="http://www.w3.org/1999/xhtml">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">
				<xsl:value-of select="'http://xcri.org/profiles/1.2/catalog D:/APS/XCRI/CAP/CAP1.2/xcri_cap_1_2.xsd'"/>
			</xsl:attribute>
			<xsl:for-each select="ns0:catalog">
				<xsl:attribute name="generated" namespace="">
					<xsl:value-of select="string(@generated)"/>
				</xsl:attribute>
				<xsl:for-each select="ns0:relation">
					<mlo:hasPart xsl:exclude-result-prefixes="mlo">
						<xsl:value-of select="string(.)"/>
					</mlo:hasPart>
				</xsl:for-each>
				<xsl:for-each select="ns0:description/node()[boolean(self::text())]">
					<dc:description xsl:exclude-result-prefixes="dc">
						<xsl:value-of select="string(.)"/>
					</dc:description>
				</xsl:for-each>
				<xsl:for-each select="ns0:identifier">
					<dc:identifier xsl:exclude-result-prefixes="dc">
						<xsl:value-of select="string(.)"/>
					</dc:identifier>
				</xsl:for-each>
				<xsl:for-each select="ns0:image">
					<image>
						<xsl:call-template name="tbf:tbf1_imageDType">
							<xsl:with-param name="input" select="."/>
						</xsl:call-template>
					</image>
				</xsl:for-each>
				<xsl:for-each select="ns0:subject">
					<xsl:variable name="var1_lang" select="@xml:lang"/>
					<dc:subject xsl:exclude-result-prefixes="dc">
						<xsl:if test="string(boolean($var1_lang)) != 'false'">
							<xsl:attribute name="xml:lang">
								<xsl:value-of select="string($var1_lang)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:value-of select="string(.)"/>
					</dc:subject>
				</xsl:for-each>
				<xsl:for-each select="ns0:title">
					<xsl:variable name="var2_lang" select="@xml:lang"/>
					<dc:title xsl:exclude-result-prefixes="dc">
						<xsl:if test="string(boolean($var2_lang)) != 'false'">
							<xsl:attribute name="xml:lang">
								<xsl:value-of select="string($var2_lang)"/>
							</xsl:attribute>
						</xsl:if>
						<xsl:value-of select="string(.)"/>
					</dc:title>
				</xsl:for-each>
				<xsl:for-each select="ns0:url">
					<mlo:url xsl:exclude-result-prefixes="mlo">
						<xsl:value-of select="string(.)"/>
					</mlo:url>
				</xsl:for-each>
				<xsl:for-each select="ns0:provider">
					<provider>
						<xsl:for-each select="ns0:relation">
							<mlo:hasPart xsl:exclude-result-prefixes="mlo">
								<xsl:value-of select="string(.)"/>
							</mlo:hasPart>
						</xsl:for-each>
						<xsl:for-each select="ns0:description/node()[boolean(self::text())]">
							<dc:description xsl:exclude-result-prefixes="dc">
								<xsl:value-of select="string(.)"/>
							</dc:description>
						</xsl:for-each>
						<xsl:for-each select="ns0:identifier">
							<dc:identifier xsl:exclude-result-prefixes="dc">
								<xsl:value-of select="string(.)"/>
							</dc:identifier>
						</xsl:for-each>
						<xsl:for-each select="ns0:image">
							<image>
								<xsl:call-template name="tbf:tbf1_imageDType">
									<xsl:with-param name="input" select="."/>
								</xsl:call-template>
							</image>
						</xsl:for-each>
						<xsl:for-each select="ns0:subject">
							<xsl:variable name="var3_lang" select="@xml:lang"/>
							<dc:subject xsl:exclude-result-prefixes="dc">
								<xsl:if test="string(boolean($var3_lang)) != 'false'">
									<xsl:attribute name="xml:lang">
										<xsl:value-of select="string($var3_lang)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:value-of select="string(.)"/>
							</dc:subject>
						</xsl:for-each>
						<xsl:for-each select="ns0:title">
							<xsl:variable name="var4_lang" select="@xml:lang"/>
							<dc:title xsl:exclude-result-prefixes="dc">
								<xsl:if test="string(boolean($var4_lang)) != 'false'">
									<xsl:attribute name="xml:lang">
										<xsl:value-of select="string($var4_lang)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:value-of select="string(.)"/>
							</dc:title>
						</xsl:for-each>
						<xsl:for-each select="ns0:url">
							<mlo:url xsl:exclude-result-prefixes="mlo">
								<xsl:value-of select="string(.)"/>
							</mlo:url>
						</xsl:for-each>
						<xsl:for-each select="ns0:course">
							<course>
								<xsl:for-each select="ns0:relation">
									<mlo:hasPart xsl:exclude-result-prefixes="mlo">
										<xsl:value-of select="string(.)"/>
									</mlo:hasPart>
								</xsl:for-each>
								<xsl:for-each select="ns0:description/node()[boolean(self::text())]">
									<dc:description xsl:exclude-result-prefixes="dc">
										<xsl:value-of select="string(.)"/>
									</dc:description>
								</xsl:for-each>
								<xsl:for-each select="ns0:identifier">
									<dc:identifier xsl:exclude-result-prefixes="dc">
										<xsl:value-of select="string(.)"/>
									</dc:identifier>
								</xsl:for-each>
								<xsl:for-each select="ns0:image">
									<image>
										<xsl:call-template name="tbf:tbf1_imageDType">
											<xsl:with-param name="input" select="."/>
										</xsl:call-template>
									</image>
								</xsl:for-each>
								<xsl:for-each select="ns0:subject">
									<xsl:variable name="var5_lang" select="@xml:lang"/>
									<dc:subject xsl:exclude-result-prefixes="dc">
										<xsl:if test="string(boolean($var5_lang)) != 'false'">
											<xsl:attribute name="xml:lang">
												<xsl:value-of select="string($var5_lang)"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:value-of select="string(.)"/>
									</dc:subject>
								</xsl:for-each>
								<xsl:for-each select="ns0:title">
									<xsl:variable name="var6_lang" select="@xml:lang"/>
									<dc:title xsl:exclude-result-prefixes="dc">
										<xsl:if test="string(boolean($var6_lang)) != 'false'">
											<xsl:attribute name="xml:lang">
												<xsl:value-of select="string($var6_lang)"/>
											</xsl:attribute>
										</xsl:if>
										<xsl:value-of select="string(.)"/>
									</dc:title>
								</xsl:for-each>
								<xsl:for-each select="ns0:url">
									<mlo:url xsl:exclude-result-prefixes="mlo">
										<xsl:value-of select="string(.)"/>
									</mlo:url>
								</xsl:for-each>
								<xsl:for-each select="ns0:qualification">
									<mlo:qualification xsl:exclude-result-prefixes="mlo">
										<xsl:for-each select="ns0:identifier">
											<dc:identifier xsl:exclude-result-prefixes="dc">
												<xsl:value-of select="string(.)"/>
											</dc:identifier>
										</xsl:for-each>
										<xsl:for-each select="ns0:title">
											<xsl:variable name="var7_lang" select="@xml:lang"/>
											<dc:title xsl:exclude-result-prefixes="dc">
												<xsl:if test="string(boolean($var7_lang)) != 'false'">
													<xsl:attribute name="xml:lang">
														<xsl:value-of select="string($var7_lang)"/>
													</xsl:attribute>
												</xsl:if>
												<xsl:value-of select="string(.)"/>
											</dc:title>
										</xsl:for-each>
										<xsl:for-each select="ns0:description/node()[boolean(self::text())]">
											<dc:description xsl:exclude-result-prefixes="dc">
												<xsl:value-of select="string(.)"/>
											</dc:description>
										</xsl:for-each>
										<xsl:for-each select="ns0:level">
											<dcterms:educationLevel xsl:exclude-result-prefixes="dcterms">
												<xsl:value-of select="string(.)"/>
											</dcterms:educationLevel>
										</xsl:for-each>
										<xsl:for-each select="ns0:type">
											<dc:type xsl:exclude-result-prefixes="dc">
												<xsl:value-of select="string(.)"/>
											</dc:type>
										</xsl:for-each>
										<xsl:for-each select="ns0:awardedBy">
											<awardedBy>
												<xsl:value-of select="string(.)"/>
											</awardedBy>
										</xsl:for-each>
										<xsl:for-each select="ns0:accreditedBy">
											<accreditedBy>
												<xsl:value-of select="string(.)"/>
											</accreditedBy>
										</xsl:for-each>
									</mlo:qualification>
								</xsl:for-each>
								<xsl:for-each select="ns0:credit">
									<mlo:credit xsl:exclude-result-prefixes="mlo">
										<xsl:for-each select="ns0:scheme">
											<credit:scheme xsl:exclude-result-prefixes="credit">
												<xsl:value-of select="string(.)"/>
											</credit:scheme>
										</xsl:for-each>
										<credit:level xsl:exclude-result-prefixes="credit">
											<xsl:value-of select="string(ns0:level)"/>
										</credit:level>
										<credit:value xsl:exclude-result-prefixes="credit">
											<xsl:value-of select="string(ns0:value)"/>
										</credit:value>
									</mlo:credit>
								</xsl:for-each>
								<xsl:for-each select="ns0:presentation">
									<presentation>
										<xsl:for-each select="ns0:relation">
											<mlo:hasPart xsl:exclude-result-prefixes="mlo">
												<xsl:value-of select="string(.)"/>
											</mlo:hasPart>
										</xsl:for-each>
										<xsl:for-each select="ns0:description/node()[boolean(self::text())]">
											<dc:description xsl:exclude-result-prefixes="dc">
												<xsl:value-of select="string(.)"/>
											</dc:description>
										</xsl:for-each>
										<xsl:for-each select="ns0:identifier">
											<dc:identifier xsl:exclude-result-prefixes="dc">
												<xsl:value-of select="string(.)"/>
											</dc:identifier>
										</xsl:for-each>
										<xsl:for-each select="ns0:image">
											<image>
												<xsl:call-template name="tbf:tbf1_imageDType">
													<xsl:with-param name="input" select="."/>
												</xsl:call-template>
											</image>
										</xsl:for-each>
										<xsl:for-each select="ns0:subject">
											<xsl:variable name="var8_lang" select="@xml:lang"/>
											<dc:subject xsl:exclude-result-prefixes="dc">
												<xsl:if test="string(boolean($var8_lang)) != 'false'">
													<xsl:attribute name="xml:lang">
														<xsl:value-of select="string($var8_lang)"/>
													</xsl:attribute>
												</xsl:if>
												<xsl:value-of select="string(.)"/>
											</dc:subject>
										</xsl:for-each>
										<xsl:for-each select="ns0:title">
											<xsl:variable name="var9_lang" select="@xml:lang"/>
											<dc:title xsl:exclude-result-prefixes="dc">
												<xsl:if test="string(boolean($var9_lang)) != 'false'">
													<xsl:attribute name="xml:lang">
														<xsl:value-of select="string($var9_lang)"/>
													</xsl:attribute>
												</xsl:if>
												<xsl:value-of select="string(.)"/>
											</dc:title>
										</xsl:for-each>
										<xsl:for-each select="ns0:url">
											<mlo:url xsl:exclude-result-prefixes="mlo">
												<xsl:value-of select="string(.)"/>
											</mlo:url>
										</xsl:for-each>
										<xsl:for-each select="ns0:entryRequirements">
											<mlo:prerequisite xsl:exclude-result-prefixes="mlo">
												<xsl:value-of select="/.."/>
											</mlo:prerequisite>
										</xsl:for-each>
										<mlo:start xsl:exclude-result-prefixes="mlo">
											<xsl:for-each select="ns0:start">
												<xsl:attribute name="dtf" namespace="">
													<xsl:value-of select="string(.)"/>
												</xsl:attribute>
											</xsl:for-each>
											<xsl:for-each select="ns0:startUntil">
												<xsl:value-of select="string(.)"/>
											</xsl:for-each>
										</mlo:start>
										<end>
											<xsl:for-each select="ns0:end">
												<xsl:attribute name="dtf" namespace="">
													<xsl:value-of select="string(.)"/>
												</xsl:attribute>
											</xsl:for-each>
											<xsl:for-each select="ns0:endFrom">
												<xsl:value-of select="string(.)"/>
											</xsl:for-each>
										</end>
										<xsl:for-each select="ns0:duration">
											<mlo:duration xsl:exclude-result-prefixes="mlo">
												<xsl:value-of select="string(.)"/>
											</mlo:duration>
										</xsl:for-each>
										<xsl:for-each select="ns0:applyFrom">
											<applyFrom>
												<xsl:value-of select="string(.)"/>
											</applyFrom>
										</xsl:for-each>
										<xsl:for-each select="ns0:applyUntil">
											<applyUntil>
												<xsl:value-of select="string(.)"/>
											</applyUntil>
										</xsl:for-each>
										<xsl:for-each select="ns0:applyTo">
											<applyTo>
												<xsl:value-of select="string(.)"/>
											</applyTo>
										</xsl:for-each>
										<xsl:for-each select="ns0:studyMode">
											<studyMode>
												<xsl:value-of select="string(.)"/>
											</studyMode>
										</xsl:for-each>
										<xsl:for-each select="ns0:attendanceMode">
											<attendanceMode>
												<xsl:value-of select="string(.)"/>
											</attendanceMode>
										</xsl:for-each>
										<xsl:for-each select="ns0:attendancePattern">
											<attendancePattern>
												<xsl:value-of select="string(.)"/>
											</attendancePattern>
										</xsl:for-each>
										<xsl:for-each select="ns0:languageOfInstruction">
											<mlo:languageOfInstruction xsl:exclude-result-prefixes="mlo">
												<xsl:value-of select="string(.)"/>
											</mlo:languageOfInstruction>
										</xsl:for-each>
										<xsl:for-each select="ns0:languageOfAssessment">
											<languageOfAssessment>
												<xsl:value-of select="string(.)"/>
											</languageOfAssessment>
										</xsl:for-each>
										<xsl:for-each select="ns0:placesAvailable">
											<mlo:places xsl:exclude-result-prefixes="mlo">
												<xsl:value-of select="string(.)"/>
											</mlo:places>
										</xsl:for-each>
										<xsl:for-each select="ns0:cost">
											<mlo:cost xsl:exclude-result-prefixes="mlo">
												<xsl:value-of select="string(.)"/>
											</mlo:cost>
										</xsl:for-each>
										<xsl:for-each select="ns0:venue">
											<venue>
												<provider>
													<xsl:for-each select="ns0:relation">
														<mlo:hasPart xsl:exclude-result-prefixes="mlo">
															<xsl:value-of select="string(.)"/>
														</mlo:hasPart>
													</xsl:for-each>
													<xsl:for-each select="ns0:description/node()[boolean(self::text())]">
														<dc:description xsl:exclude-result-prefixes="dc">
															<xsl:value-of select="string(.)"/>
														</dc:description>
													</xsl:for-each>
													<xsl:for-each select="ns0:identifier">
														<dc:identifier xsl:exclude-result-prefixes="dc">
															<xsl:value-of select="string(.)"/>
														</dc:identifier>
													</xsl:for-each>
													<xsl:for-each select="ns0:image">
														<image>
															<xsl:call-template name="tbf:tbf1_imageDType">
																<xsl:with-param name="input" select="."/>
															</xsl:call-template>
														</image>
													</xsl:for-each>
													<xsl:for-each select="ns0:title">
														<xsl:variable name="var10_lang" select="@xml:lang"/>
														<dc:title xsl:exclude-result-prefixes="dc">
															<xsl:if test="string(boolean($var10_lang)) != 'false'">
																<xsl:attribute name="xml:lang">
																	<xsl:value-of select="string($var10_lang)"/>
																</xsl:attribute>
															</xsl:if>
															<xsl:value-of select="string(.)"/>
														</dc:title>
													</xsl:for-each>
													<xsl:for-each select="ns0:url">
														<mlo:url xsl:exclude-result-prefixes="mlo">
															<xsl:value-of select="string(.)"/>
														</mlo:url>
													</xsl:for-each>
													<mlo:location xsl:exclude-result-prefixes="mlo">
														<xsl:for-each select="ns0:street">
															<mlo:street xsl:exclude-result-prefixes="mlo">
																<xsl:value-of select="string(.)"/>
															</mlo:street>
														</xsl:for-each>
														<xsl:for-each select="ns0:town">
															<mlo:town xsl:exclude-result-prefixes="mlo">
																<xsl:value-of select="string(.)"/>
															</mlo:town>
														</xsl:for-each>
														<xsl:for-each select="ns0:postcode">
															<mlo:postcode xsl:exclude-result-prefixes="mlo">
																<xsl:value-of select="string(.)"/>
															</mlo:postcode>
														</xsl:for-each>
														<xsl:for-each select="ns0:address">
															<mlo:address xsl:exclude-result-prefixes="mlo">
																<xsl:value-of select="string(.)"/>
															</mlo:address>
														</xsl:for-each>
														<xsl:for-each select="ns0:phone">
															<mlo:phone xsl:exclude-result-prefixes="mlo">
																<xsl:value-of select="string(.)"/>
															</mlo:phone>
														</xsl:for-each>
														<xsl:for-each select="ns0:fax">
															<mlo:fax xsl:exclude-result-prefixes="mlo">
																<xsl:value-of select="string(.)"/>
															</mlo:fax>
														</xsl:for-each>
														<xsl:for-each select="ns0:email">
															<mlo:email xsl:exclude-result-prefixes="mlo">
																<xsl:value-of select="string(.)"/>
															</mlo:email>
														</xsl:for-each>
													</mlo:location>
												</provider>
											</venue>
										</xsl:for-each>
									</presentation>
								</xsl:for-each>
							</course>
						</xsl:for-each>
						<mlo:location xsl:exclude-result-prefixes="mlo">
							<xsl:for-each select="ns0:street">
								<mlo:street xsl:exclude-result-prefixes="mlo">
									<xsl:value-of select="string(.)"/>
								</mlo:street>
							</xsl:for-each>
							<xsl:for-each select="ns0:town">
								<mlo:town xsl:exclude-result-prefixes="mlo">
									<xsl:value-of select="string(.)"/>
								</mlo:town>
							</xsl:for-each>
							<xsl:for-each select="ns0:postcode">
								<mlo:postcode xsl:exclude-result-prefixes="mlo">
									<xsl:value-of select="string(.)"/>
								</mlo:postcode>
							</xsl:for-each>
							<xsl:for-each select="ns0:address">
								<mlo:address xsl:exclude-result-prefixes="mlo">
									<xsl:value-of select="string(.)"/>
								</mlo:address>
							</xsl:for-each>
							<xsl:for-each select="ns0:phone">
								<mlo:phone xsl:exclude-result-prefixes="mlo">
									<xsl:value-of select="string(.)"/>
								</mlo:phone>
							</xsl:for-each>
							<xsl:for-each select="ns0:fax">
								<mlo:fax xsl:exclude-result-prefixes="mlo">
									<xsl:value-of select="string(.)"/>
								</mlo:fax>
							</xsl:for-each>
							<xsl:for-each select="ns0:email">
								<mlo:email xsl:exclude-result-prefixes="mlo">
									<xsl:value-of select="string(.)"/>
								</mlo:email>
							</xsl:for-each>
						</mlo:location>
					</provider>
				</xsl:for-each>
			</xsl:for-each>
		</catalog>
	</xsl:template>
</xsl:stylesheet>
